@using System.Data;
@using Microsoft.EntityFrameworkCore;

@inject AppDbContext dbContext


@{

    ViewData["Title"] = "Database Information";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var can_connect = dbContext.Database.CanConnect();
}
<partial name="_AlertMessage" />

<h2>Information</h2>
<h4>- Dtabase Name  : @dbName</h4>
<h4>- Source        : @connect.DataSource</h4>
<h4>- State         : @connect.State</h4>

<hr>
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}

@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>

}

@if(!can_connect)
{
    <p class="alert alert-danger">Can't connect to the server</p>
}

@if(can_connect)
{
    <h2>Tables</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach(System.Data.DataRow row in table.Rows)
            {
                <li>@row["TABLE_NAME"]</li>
            }

    </ul>
    <a class="btn btn-danger" asp-action="DeleteDb">Delete Database </a>
}

@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button  type="submit" class="btn btn-success" asp-action="Migrate">Create Database </button>
    </form>
    
}